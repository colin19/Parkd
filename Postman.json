{
	"info": {
		"name": "Test",
		"_postman_id": "1bb6c312-2df0-c15e-469a-7ebb25cd7d3b",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get park details",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "788c73b9-8b34-4531-b287-f70940e4be25",
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"address check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.address).to.eql(\"400 Grove Blvd, Austin, TX 78741, USA\");",
							"});",
							"",
							"pm.test(\"first photo id check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.photos[0].id).to.eql(169);",
							"});",
							"",
							"pm.test(\"id check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(12);",
							"});",
							"",
							"pm.test(\"city of first truck check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.trucks[0].city).to.eql(\"Austin\");",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.parkd.us/park/12",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"park",
						"12"
					]
				},
				"description": "Get the details of a specified park"
			},
			"response": []
		},
		{
			"name": "get park search or",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8cff540-5ea2-435f-9ebb-7e9b46381ff6",
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"park search keyword bbq park or city check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"park search keyword bbq park or name with park check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].name).to.eql(\"Zilker Metropolitan Park\");",
							"});",
							"",
							"pm.test(\"park search keyword bbq park or second park photos check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].photos[0].id).to.eql(3);",
							"});",
							"",
							"pm.test(\"park search keyword bbq park or second park review check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].reviews[0].id).to.eql(3);",
							"});",
							"",
							"pm.test(\"park search keyword bbq park or second park trucks check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].trucks[0].city).to.eql(\"Austin\");",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/park?results_per_page=4&q={\"filters\":[{\"or\":[{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%park%\"}]}]}]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"park"
					],
					"query": [
						{
							"key": "results_per_page",
							"value": "4",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"or\":[{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%park%\"}]}]}]}",
							"equals": true
						}
					]
				},
				"description": "Get the details of a specified park"
			},
			"response": []
		},
		{
			"name": "get park search filtered",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21d6c9f4-98c2-46bf-8914-09ec9dac3b22",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"park filted rating > 0 city austin/portland order by rating/city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].city).to.eql(\"Portland\");",
							"});",
							"",
							"pm.test(\"park filted rating > 0 city austin/portland order by rating/city check rating order\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].rating).to.eql(4.8);",
							"});",
							"",
							"pm.test(\"park filted rating > 0 city austin/portland order by rating/city check rating order\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[2].rating).to.eql(4.7);",
							"});",
							"",
							"pm.test(\"park filted rating > 0 city austin/portland order by rating/city check city order\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[3].city).to.eql(\"Portland\");",
							"});",
							"",
							"pm.test(\"park filted rating > 0 city austin/portland order by rating/city check city order\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[4].city).to.eql(\"Austin\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/park?page=1&q={\"filters\":[{\"and\":[{\"name\":\"rating\",\"op\":\"ge\",\"val\":0},{\"name\":\"city\",\"op\":\"in\",\"val\":[\"Austin\",\"Portland\"]}]}],\"order_by\":[{\"field\":\"rating\",\"direction\":\"desc\"},{\"field\":\"city\",\"direction\":\"desc\"}]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"park"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"and\":[{\"name\":\"rating\",\"op\":\"ge\",\"val\":0},{\"name\":\"city\",\"op\":\"in\",\"val\":[\"Austin\",\"Portland\"]}]}],\"order_by\":[{\"field\":\"rating\",\"direction\":\"desc\"},{\"field\":\"city\",\"direction\":\"desc\"}]}",
							"equals": true
						}
					]
				},
				"description": "Get the details of a truck specified by ID"
			},
			"response": []
		},
		{
			"name": "get park search and",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15a699c9-fb05-4356-874a-7d8c5aea3384",
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"park search keyword Zilker park and city check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"park search keyword Zilker park and name with park check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].name).to.eql(\"Zilker Metropolitan Park\");",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/park?results_per_page=4&q={\"filters\":[{\"and\":[{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%Zilker%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%Zilker%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%Zilker%\"}]},{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%park%\"}]}]}]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"park"
					],
					"query": [
						{
							"key": "results_per_page",
							"value": "4",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"and\":[{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%Zilker%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%Zilker%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%Zilker%\"}]},{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%park%\"}]}]}]}",
							"equals": true
						}
					]
				},
				"description": "Get the details of a specified park"
			},
			"response": []
		},
		{
			"name": "get park details empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3da954a-4323-42ce-ba20-a5d89bc7a359",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response empty if id not in db\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({});",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.parkd.us/park/1200",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"park",
						"1200"
					]
				},
				"description": "Get the details of a specified park"
			},
			"response": []
		},
		{
			"name": "get truck details",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35560d93-9536-43d0-bd39-280917ce492e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"address check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.address).to.eql(\"1720 Barton Springs Rd, Austin, TX 78704, USA\");",
							"});",
							"",
							"pm.test(\"truck park rating check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.park.rating).to.eql(4.5);",
							"});",
							"",
							"pm.test(\"truck first photo likes check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.photos[0].likes).to.eql(43);",
							"});",
							"",
							"pm.test(\"truck first review id check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.reviews[0].id).to.eql(9);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.parkd.us/truck/3",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck",
						"3"
					]
				},
				"description": "Get the details of a truck specified by ID"
			},
			"response": []
		},
		{
			"name": "get truck search or",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a808a880-4594-4c91-a975-0052f51ead3f",
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"truck search keyword bbq park or city check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].city).to.eql(\"Seattle\");",
							"});",
							"",
							"pm.test(\"truck search keyword bbq park or name with park check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].name).to.eql(\"Occidental Park Food Truck Pod\");",
							"});",
							"",
							"pm.test(\"truck search keyword bbq park or first truck park check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].park.rating).to.eql(4.6);",
							"});",
							"",
							"pm.test(\"truck search keyword bbq park or first truck reviews check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].reviews[0].truck_id).to.eql(53);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck?results_per_page=4&q={\"filters\":[{\"or\":[{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%park%\"}]}]}],\"order_by\":[]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck"
					],
					"query": [
						{
							"key": "results_per_page",
							"value": "4",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"or\":[{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%park%\"}]}]}],\"order_by\":[]}\n\n",
							"equals": true
						}
					]
				},
				"description": "Get the details of a truck specified by ID"
			},
			"response": []
		},
		{
			"name": "get truck search filtered",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d375f239-2712-49f4-8359-ad546c566f39",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"truck filted rating > 0 city austin/portland order by rating/city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].city).to.eql(\"Portland\");",
							"});",
							"",
							"pm.test(\"truck filted rating > 0 city austin/portland order by rating/city check rating order\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].rating).to.eql(4.9);",
							"});",
							"",
							"pm.test(\"truck filted rating > 0 city austin/portland order by rating/city check rating order\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[2].rating).to.eql(4.8);",
							"});",
							"",
							"pm.test(\"truck filted rating > 0 city austin/portland order by rating/city check all ratings >= 4.8\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[4].rating).to.eql(4.8);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck?page=1&q={\"filters\":[{\"and\":[{\"name\":\"rating\",\"op\":\"ge\",\"val\":4.8},{\"name\":\"city\",\"op\":\"in\",\"val\":[\"Austin\",\"Portland\"]}]}],\"order_by\":[{\"field\":\"rating\",\"direction\":\"desc\"},{\"field\":\"city\",\"direction\":\"desc\"}]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"and\":[{\"name\":\"rating\",\"op\":\"ge\",\"val\":4.8},{\"name\":\"city\",\"op\":\"in\",\"val\":[\"Austin\",\"Portland\"]}]}],\"order_by\":[{\"field\":\"rating\",\"direction\":\"desc\"},{\"field\":\"city\",\"direction\":\"desc\"}]}",
							"equals": true
						}
					]
				},
				"description": "Get the details of a specified park"
			},
			"response": []
		},
		{
			"name": "get truck search and",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e52494f9-8496-4e5c-8bf4-c05ed9a58db2",
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"truck search keyword bbq park and city check no results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(0);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck?results_per_page=4&q={\"filters\":[{\"and\":[{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%park%\"}]}]}],\"order_by\":[]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck"
					],
					"query": [
						{
							"key": "results_per_page",
							"value": "4",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"and\":[{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"city\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"name\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"address\",\"op\":\"like\",\"val\":\"%park%\"}]}]}],\"order_by\":[]}\n\n",
							"equals": true
						}
					]
				},
				"description": "Get the details of a truck specified by ID"
			},
			"response": []
		},
		{
			"name": "get truck details empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b702d2c-ffe3-4319-ab2c-645e104b4ea8",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response empty if id not in db\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({});",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.parkd.us/truck/666666",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck",
						"666666"
					]
				},
				"description": "Get the details of a truck specified by ID"
			},
			"response": []
		},
		{
			"name": "get truck photo details",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bd77b475-eb7f-4aae-af63-8cde3d80cd68",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"truck photo likes check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.likes).to.eql(16);",
							"});",
							"",
							"pm.test(\"truck photo tag check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tag).to.eql(\"#peachedtortilla\");",
							"});",
							"",
							"pm.test(\"truck photo truck city test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.truck.city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"truck photo truck park_id check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.truck.park_id).to.eql(17);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck_photo/3",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck_photo",
						"3"
					]
				},
				"description": "get details of a specified truck photo"
			},
			"response": []
		},
		{
			"name": "get truck photo search or",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c05edd8-5001-4a6f-b1fc-760a8281a952",
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"truck photo search keyword bbq park or likes check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].likes).to.eql(32);",
							"});",
							"",
							"pm.test(\"truck photo search keyword bbq park or description with park check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].description).to.eql(\"@mightycone is one of my fav spots! (Featured on Diners, Drive-Ins, and Dives!) Deliciously fried chicken, shrimp, or avocado in a tortilla cone, topped with slaw and their special sauce. The Picnic Park is the perfect place to hit up multiple food trucks on a sunny Sunday like today \");",
							"});",
							"",
							"pm.test(\"truck photo search keyword bbq park or second photo likes check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].likes).to.eql(87);",
							"});",
							"",
							"pm.test(\"truck photo search keyword bbq park or second photo truck check \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].truck.city).to.eql(\"Portland\");",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck_photo?results_per_page=4&q={\"filters\":[{\"or\":[{\"or\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"tag\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"tag\",\"op\":\"like\",\"val\":\"%park%\"}]}]}],\"order_by\":[]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck_photo"
					],
					"query": [
						{
							"key": "results_per_page",
							"value": "4",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"or\":[{\"or\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"tag\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"tag\",\"op\":\"like\",\"val\":\"%park%\"}]}]}],\"order_by\":[]}",
							"equals": true
						}
					]
				},
				"description": "get details of a specified truck photo"
			},
			"response": []
		},
		{
			"name": "get truck photo search filtered",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc04c47c-10e3-4b2d-b596-8e351180adf7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"truck photo filted likes > 0 city Seattle order by likes check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].truck.city).to.eql(\"Seattle\");",
							"});",
							"",
							"pm.test(\"truck photo filted likes > 0 city Seattle order by likes check likes order\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].likes).to.eql(159145);",
							"});",
							"",
							"pm.test(\"truck photo filted likes > 0 city Seattle order by likes check likes order\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[2].likes).to.eql(72638);",
							"});",
							"",
							"pm.test(\"truck photo filted likes > 0 city Seattle order by likes check all likes >= 4.8\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[19].likes).to.eql(1041);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck_photo?page=1&q={\"filters\":[{\"and\":[{\"name\":\"likes\",\"op\":\"ge\",\"val\":10},{\"name\":\"truck\",\"op\":\"has\",\"val\":{\"name\":\"city\",\"op\":\"in\",\"val\":[\"Seattle\"]}}]}],\"order_by\":[{\"field\":\"likes\",\"direction\":\"desc\"}]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck_photo"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"and\":[{\"name\":\"likes\",\"op\":\"ge\",\"val\":10},{\"name\":\"truck\",\"op\":\"has\",\"val\":{\"name\":\"city\",\"op\":\"in\",\"val\":[\"Seattle\"]}}]}],\"order_by\":[{\"field\":\"likes\",\"direction\":\"desc\"}]}",
							"equals": true
						}
					]
				},
				"description": "Get the details of a specified park"
			},
			"response": []
		},
		{
			"name": "get truck photo search and",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a99dbeaf-cd04-4525-881d-5a1218b86e08",
						"type": "text/javascript",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"truck search keyword bbq park and city check no results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(0);",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck_photo?results_per_page=4&q={\"filters\":[{\"and\":[{\"or\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"tag\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"tag\",\"op\":\"like\",\"val\":\"%park%\"}]}]}],\"order_by\":[]}",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck_photo"
					],
					"query": [
						{
							"key": "results_per_page",
							"value": "4",
							"equals": true
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"and\":[{\"or\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%BBQ%\"},{\"name\":\"tag\",\"op\":\"like\",\"val\":\"%BBQ%\"}]},{\"or\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%park%\"},{\"name\":\"tag\",\"op\":\"like\",\"val\":\"%park%\"}]}]}],\"order_by\":[]}",
							"equals": true
						}
					]
				},
				"description": "get details of a specified truck photo"
			},
			"response": []
		},
		{
			"name": "get truck photo details empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d74c56d5-21c5-4fc3-a081-200bce30cb39",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response empty if id not in db\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({});",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck_photo/300",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck_photo",
						"300"
					]
				},
				"description": "get details of a specified truck photo"
			},
			"response": []
		},
		{
			"name": "list parks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d7b8ed2-86f2-4249-b5b4-2840c5ea1a68",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"parks number of results check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(60);",
							"});",
							"",
							"pm.test(\"first object city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"first object rating check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].rating).to.eql(4.7);",
							"});",
							"",
							"pm.test(\"first object first photo id check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].photos[0].id).to.eql(0);",
							"});",
							"",
							"pm.test(\"first object first review park_id check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].reviews[0].park_id).to.eql(0);",
							"});",
							"",
							"pm.test(\"second object city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"last object city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[19].city).to.eql(\"Austin\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.parkd.us/park",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"park"
					]
				},
				"description": "list all of the parks"
			},
			"response": []
		},
		{
			"name": "list trucks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23178607-7cd7-412d-a5eb-822127b174fd",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"trucks number of results check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(60);",
							"});",
							"",
							"pm.test(\"first object city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"first object rating check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].rating).to.eql(4.6);",
							"});",
							"",
							"pm.test(\"first object first photo id check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].photos[0].id).to.eql(1);",
							"});",
							"",
							"pm.test(\"first object first review truck_id check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].reviews[0].truck_id).to.eql(0);",
							"});",
							"",
							"pm.test(\"first object first truck check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].park.city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"second object city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"last object city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[19].city).to.eql(\"Austin\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "api.parkd.us/truck",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck"
					]
				},
				"description": "Lists all the trucks"
			},
			"response": []
		},
		{
			"name": "get truck photos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b197f844-c5af-4e16-98bf-e7fd6e4e631e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"parks number of results check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(178);",
							"});",
							"",
							"pm.test(\"first object tag check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].tag).to.eql(\"#ValentinasBBQ\");",
							"});",
							"",
							"pm.test(\"first object likes check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].likes).to.eql(10);",
							"});",
							"",
							"pm.test(\"first object truck city check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].truck.city).to.eql(\"Austin\");",
							"});",
							"",
							"pm.test(\"first object truck rating check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].truck.rating).to.eql(4.7);",
							"});",
							"",
							"pm.test(\"second object tag check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].tag).to.eql(\"# veracruztacos\");",
							"});",
							"",
							"pm.test(\"last object tag check\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[17].tag).to.eql(\"#deedeethai\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.parkd.us/truck_photo",
					"protocol": "http",
					"host": [
						"api",
						"parkd",
						"us"
					],
					"path": [
						"truck_photo"
					]
				},
				"description": "get the photos from a given truck"
			},
			"response": []
		}
	]
}